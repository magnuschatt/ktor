plugins {
    id "me.champeau.gradle.jmh" version "0.4.4"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.1.51"
}

allOpen {
    annotation("org.openjdk.jmh.annotations.State")
}

sourceSets {
    jmh {
        kotlin {
            srcDir "src-jmh"
        }
    }
}

description = ''
dependencies {
    jmh project(':ktor-server:ktor-server-test-host')
    jmh project(':ktor-server:ktor-server-netty')
    jmh project(':ktor-server:ktor-server-jetty')

    jmh group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    jmh group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.6.0'
    jmh group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.1'
}

jmh {
    jmhVersion = '1.19'
    include = [/io.ktor.tests.ValuesMapBenchmark/]
}

jmhJar.archiveName = 'benchmarks.jar'

task runBenchmark(type: JavaExec, dependsOn: 'jmhJar') {
    def mainClassFqName = null

    if (project.hasProperty('benchmarkClassFqName')) {
        mainClassFqName = project.benchmarkClassFqName
    } else if (project.hasProperty('benchmarkName')) {
        mainClassFqName = "io.ktor.benchmarks.${project.benchmarkName}Kt"
    }

    classpath = sourceSets.jmh.runtimeClasspath + jmhJar.outputs.files
    main = mainClassFqName
    systemProperties['benchmarkClassFqName'] = mainClassFqName

    doFirst {
        if (mainClassFqName == null) {
            throw new InvalidUserDataException("Neither benchmarkName nor benchmarkClassFqName property specified (use option -P to assign)")
        }

        new File(project.buildDir, 'reports/benchmarks').mkdirs()
    }
}

