buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

def configuredVersion = project.hasProperty('releaseVersion') ? project.releaseVersion : project.version

allprojects {
    apply plugin: 'maven'
    apply plugin: 'kotlin'

    group = 'io.ktor'
    version = configuredVersion

    configurations {
        testOutput.extendsFrom(testCompile)
    }

    sourceSets {
        main {
            java {
                srcDir "src"
            }
            kotlin {
                srcDir "src"
            }
            resources {
                srcDir "resources"
            }
        }
        test {
            kotlin {
                srcDir "test"
            }
            resources {
                srcDir "test-resources"
            }
        }
    }

    kotlin {
        experimental {
            coroutines 'enable'
        }
    }

    task jarTest(type: Jar, dependsOn: testClasses) {
        from sourceSets.test.output
        classifier = 'test'
    }

    test {
        ignoreFailures = true
        maxHeapSize = "2g"
    }

    dependencies {
        testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version: kotlin_version
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    repositories {
        mavenLocal()

        maven { url "https://jcenter.bintray.com" }
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap-1.1" }
        maven { url "https://jitpack.io" }
        maven { url "http://repo.maven.apache.org/maven2" }
        maven { url "https://dl.bintray.com/kotlinx/kotlinx" }
        maven { url "https://dl.bintray.com/kotlin/kotlinx" }
        maven { url "https://dl.bintray.com/kotlin/exposed" }
    }
}

subprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    task packageSources(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource

    }
    artifacts.archives packageSources

    dependencies {
        compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
        compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version
        compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jre7', version: kotlin_version
        compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jre8', version: kotlin_version
        compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-jdk8', version: '0.20-alpha-5'
        compile(group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-io', version: '0.20-alpha-5') {
            exclude(module: 'kotlin-stdlib')
        }
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
        compile group: 'com.typesafe', name: 'config', version: '1.3.1'
        testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version: kotlin_version
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }


}
